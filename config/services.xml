<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <defaults public="false"/>

        <service id="Symfony\Component\EventDispatcher\EventDispatcher"/>

        <service id="SensioLabs\Deptrac\AstRunner\AstRunner">
            <argument type="service" id="Symfony\Component\EventDispatcher\EventDispatcher"/>
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\NikicPhpParser"/>
        </service>

        <service id="SensioLabs\Deptrac\AstRunner\AstParser\AstFileReferenceInMemoryCache"/>

        <service id="SensioLabs\Deptrac\AstRunner\AstParser\AstFileReferenceCache"
                 alias="SensioLabs\Deptrac\AstRunner\AstParser\AstFileReferenceInMemoryCache"/>

        <service id="sensiolabs.deptrac.astrunner.nikic_php_parser" class="PhpParser\Parser">
            <factory class="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\ParserFactory" method="createParser"/>
        </service>

        <service id="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\FileParser">
            <argument type="service" id="sensiolabs.deptrac.astrunner.nikic_php_parser"/>
        </service>

        <service id="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\NikicPhpParser">
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\FileParser"/>
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\AstParser\AstFileReferenceCache"/>
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\Resolver\AnnotationDependencyResolver"/>
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\Resolver\AnonymousClassResolver"/>
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\Resolver\ClassConstantResolver"/>
        </service>

        <service id="SensioLabs\Deptrac\AstRunner\Resolver\TypeResolver"/>

        <service id="SensioLabs\Deptrac\AstRunner\Resolver\AnnotationDependencyResolver">
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\Resolver\TypeResolver"/>
        </service>

        <service id="SensioLabs\Deptrac\AstRunner\Resolver\AnonymousClassResolver"/>

        <service id="SensioLabs\Deptrac\AstRunner\Resolver\ClassConstantResolver"/>

        <service id="SensioLabs\Deptrac\Analyser">
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\AstRunner"/>
            <argument type="service" id="SensioLabs\Deptrac\FileResolver"/>
            <argument type="service" id="SensioLabs\Deptrac\Dependency\Resolver"/>
            <argument type="service" id="SensioLabs\Deptrac\Collector\Registry"/>
            <argument type="service" id="SensioLabs\Deptrac\RulesetEngine"/>
        </service>

        <service id="SensioLabs\Deptrac\OutputFormatterFactory">
            <argument type="tagged" tag="output_formatter"/>
        </service>

        <service id="SensioLabs\Deptrac\OutputFormatter\GraphVizOutputFormatter">
            <tag name="output_formatter"/>
        </service>

        <service id="SensioLabs\Deptrac\OutputFormatter\ConsoleOutputFormatter">
            <tag name="output_formatter"/>
        </service>

        <service id="SensioLabs\Deptrac\OutputFormatter\JUnitOutputFormatter">
            <tag name="output_formatter"/>
        </service>

        <service id="SensioLabs\Deptrac\RulesetEngine"/>

        <service id="SensioLabs\Deptrac\Collector\Registry">
            <argument type="tagged" tag="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\ClassNameCollector">
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\ClassNameRegexCollector">
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\MethodCollector">
            <argument type="service" id="SensioLabs\Deptrac\AstRunner\AstParser\NikicPhpParser\NikicPhpParser"/>
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\BoolCollector">
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\InheritanceLevelCollector">
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Collector\DirectoryCollector">
            <tag name="collector"/>
        </service>

        <service id="SensioLabs\Deptrac\Configuration\Dumper"/>

        <service id="SensioLabs\Deptrac\Configuration\Loader"/>

        <service id="SensioLabs\Deptrac\Dependency\Resolver">
            <argument type="service" id="Symfony\Component\EventDispatcher\EventDispatcher"/>
            <argument type="service" id="SensioLabs\Deptrac\Dependency\InheritanceFlatter"/>
            <argument type="tagged" tag="dependency_emitter"/>
        </service>

        <service id="SensioLabs\Deptrac\Dependency\InheritanceFlatter"/>

        <service id="SensioLabs\Deptrac\DependencyEmitter\InheritanceDependencyEmitter">
            <tag name="dependency_emitter"/>
        </service>

        <service id="SensioLabs\Deptrac\DependencyEmitter\BasicDependencyEmitter">
            <tag name="dependency_emitter"/>
        </service>

        <service id="SensioLabs\Deptrac\FileResolver"/>

        <!-- COMMANDS -->
        <service id="SensioLabs\Deptrac\Console\Command\InitCommand" public="true">
            <argument type="service" id="SensioLabs\Deptrac\Configuration\Dumper"/>
        </service>

        <service id="SensioLabs\Deptrac\Console\Command\AnalyzeCommand" public="true">
            <argument type="service" id="SensioLabs\Deptrac\Analyser"/>
            <argument type="service" id="SensioLabs\Deptrac\Configuration\Loader"/>
            <argument type="service" id="Symfony\Component\EventDispatcher\EventDispatcher"/>
            <argument type="service" id="SensioLabs\Deptrac\OutputFormatterFactory"/>
        </service>

    </services>
</container>
